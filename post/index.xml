<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ニコのブログ</title>
    <link>https://hugo.nikoblog.top/post/</link>
    <description>Recent content in Posts on ニコのブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 Jan 2022 09:29:42 +0000</lastBuildDate><atom:link href="https://hugo.nikoblog.top/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>升级&#43;优化的网易云歌单下载器</title>
      <link>https://hugo.nikoblog.top/post/%E5%8D%87%E7%BA%A7-%E4%BC%98%E5%8C%96%E7%9A%84%E7%BD%91%E6%98%93%E4%BA%91%E6%AD%8C%E5%8D%95%E4%B8%8B%E8%BD%BD%E5%99%A8/</link>
      <pubDate>Sat, 29 Jan 2022 09:29:42 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/%E5%8D%87%E7%BA%A7-%E4%BC%98%E5%8C%96%E7%9A%84%E7%BD%91%E6%98%93%E4%BA%91%E6%AD%8C%E5%8D%95%E4%B8%8B%E8%BD%BD%E5%99%A8/</guid>
      <description>嘿，大家好，今天复习了一下爬虫知识，自己想爬个网易云的歌单下来，备着以后禁网的时候听。但由于我懒癌晚期，懒得直接上浏览器上搜，搜着，发现没有一个合格的。 为什么？其实是因为那些爬虫是打开浏览器（即Selenium）、打开歌单的网址、把其中的歌曲名和链接拿下、依次用外链下载。 这个方法不好，原因是在网页版的网易云的无登陆状态是只能在歌单里看到十首歌，无法看全。就好比我歌单里有50首歌，而你的爬虫只能爬10首下来，没效果。
没办法，只能自己写了。就是套了个api嘛。源码如下。
{% codeblock lang:python %} import requests import json import jsonpath import os
playlist_id = input(&amp;lsquo;请输入歌单id: &amp;raquo;&amp;gt;&#39;) myjson = requests.get( &amp;lsquo;https://api.injahow.cn/meting/?type=playlist&amp;id={}&#39;.format(playlist_id) ) data = json.loads(myjson.text)
urls = [] names = [] for i in data: url = jsonpath.jsonpath(i, &amp;lsquo;$..url&amp;rsquo;) name = jsonpath.jsonpath(i, &amp;lsquo;$..name&amp;rsquo;)
names.append(name[0]) urls.append(url[0])  https://api.injahow.cn/meting/?server=netease&amp;type=url&amp;id=1344088470 print(&amp;lsquo;总共有{}个链接，开始下载……\n&amp;rsquo;.format(len(urls)))
if not os.path.exists(&amp;rsquo;.\缓存糖果屋\{}\&#39;.format(playlist_id)): os.mkdir(&amp;rsquo;.\缓存糖果屋\{}\&#39;.format(playlist_id))
num = 0 name_count = 0 for url in urls:
id = url.split(&#39;&amp;amp;&#39;)[2].split(&#39;&amp;amp;&#39;)[0].split(&#39;=&#39;)[1] with requests.get(url) as resp: with open( &#39;.</description>
    </item>
    
    <item>
      <title>我的Python学习经历</title>
      <link>https://hugo.nikoblog.top/post/%E6%88%91%E7%9A%84python%E5%AD%A6%E4%B9%A0%E7%BB%8F%E5%8E%86/</link>
      <pubDate>Mon, 24 Jan 2022 15:02:44 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/%E6%88%91%E7%9A%84python%E5%AD%A6%E4%B9%A0%E7%BB%8F%E5%8E%86/</guid>
      <description>前言 虽然我知道自己是小白，但我依旧想说说这一两年来Python的进步。
一阵抒情 一年半前，我就一普通得不能再普通的小学生，可能在班级里成绩能排个前十，也就当个班长，但又有什么用呢？{% del 班长又不能当饭吃， %}与同学的关系也不是特别兄弟，也就是普通同学，最多也就是普通朋友。
在那个暑假，我表哥过来我家暂住几周，说是要准备做手术。他每天都睡在我的房间，工作学习亦是如此，我每天闲来无事，就趴在他旁边，看他电脑上那些“好厉害啊”的代码，心中崇拜不已。我也就被吸引了过去，每天都这样看，慢慢也就了解了一些基础知识。{% del 虽说我表哥是学Java的 %}
几周很快就过去了，表哥走了。{% del 不要乱想啊！ %}但我对计算机的热爱越来越多</description>
    </item>
    
    <item>
      <title>让终端更优雅—— Windows Terminal美化</title>
      <link>https://hugo.nikoblog.top/post/%E8%AE%A9%E7%BB%88%E7%AB%AF%E6%9B%B4%E4%BC%98%E9%9B%85-windows-terminal%E7%BE%8E%E5%8C%96/</link>
      <pubDate>Fri, 21 Jan 2022 13:36:39 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/%E8%AE%A9%E7%BB%88%E7%AB%AF%E6%9B%B4%E4%BC%98%E9%9B%85-windows-terminal%E7%BE%8E%E5%8C%96/</guid>
      <description>{% folding 站长的碎碎念 %} 这就是默认的命令提示符，这还是我美化过的，cmd的潜质就只能被挖掘到这了。{% del 每天看这个我会吐的🤮 %} 我们不能就苟居于此。看到微软的Build 2019 大会的了吗，Windows Terminal，我一看，好东西，立马看文档配置，学成以后，便有此文。 {% endfolding %}
安装 打开Microsoft Store，搜索Windows Terminal，直接安装即可。 还有个预览版，不知有什么差别，可以尝试。大概也差不了太多。 美化 基础 打开安装好的Windows Terminal，大概是这样: 很简单，我就只是加了个壁纸，调了一下不透明度，换了个字体，就完了。 你只需点那个向下的箭头，在下拉菜单里点击设置，在新建的窗口的下面点击你想设置的终端，如常用的Powershell和CMD，再找到外观,如下。</description>
    </item>
    
    <item>
      <title>Vercel-加速个人博客</title>
      <link>https://hugo.nikoblog.top/post/vercel-%E5%8A%A0%E9%80%9F%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Wed, 19 Jan 2022 19:55:32 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/vercel-%E5%8A%A0%E9%80%9F%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>现在有不少人的博客网站都是白嫖 Github Pages等免费静态文件部署站的吧，我也不例外。但免费的东西总有不足之处，例如链接太长啦、加载太慢啦、CDN流量没啦等等。在以前配置Twikoo时就发现了一个还算良心的加速平台 —— Vercel
登录/注册 大概是这样，选择自己的注册方式进去注册，但有个大坑等着你跳…… 我第一次注册的时候报了个错，就是下面这个。 Error:This user account is blocked. Contact support@vercel.com for more information.
就是这个，整的我心态崩溃，其实解决很简单，你只需要按他要求发个邮件给他就行，就这么简单粗暴，我也是这么解决的，还多了一个外交机会，感兴趣的可以看我与可能跟我隔了大半个地球的人类对话
创建仓库 登陆后，大概会自动进入Dashboard(即仪表板)，然后点击New Project,然后会看到这样： 我是登陆好的，一般应该是要先登录Github账号后同步才会这样。 到了这个界面后，点击进入下面的Import Third-Party Git Repository,输入自己博客静态文件的Github地址。
如果还没部署到Github上，就先随便点个仓库，先创建了先。
搞定这些后，会进入这样的页面： 注意，my-repository填的是将创建的仓库名，但这也是部署后的域名的一部分，能短就短，更何况填了就不能改了，慎填。
整完这些后，Vercel会自动Clone源仓库的东东到你设的my-repository，可以在下面查看进度，等一小会……
Over! 搞定后，Vercel会给你重定向，放烟花，可喜庆了。 点击中间的Domains下面的链接，那就是你的加速博客！
补充 设定自定义域名 谁都不想用这不自由的又臭又长的地址，所以我命由我不由天。点击菜单栏的Settings，找到 Domains，点击默认域名右边的Edit按钮，自己改。
更新网页 当你又对网页进行更改了咋办？No Problem。我们只需点到菜单栏的Deployments，点第一个列表Item右边的那三个点，像这样。 点击后出来一个框，点Promote to Production，弹出个确认框，确认完事。</description>
    </item>
    
    <item>
      <title>2021·总结</title>
      <link>https://hugo.nikoblog.top/post/2021%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 19 Jan 2022 11:11:48 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/2021%E6%80%BB%E7%BB%93/</guid>
      <description>{% tip sync%} 这篇年度总结迟到了1月19天，也许有些目标已经忘记了，想起来就会持续更新。 {% endtip %}
回顾 2021 🐂 2021这一年各个行业都不平凡，科技界有华为出鸿蒙2.0、OpenEuler系统，医学界有中国全面第二针甚至是第三针，而我在这一年也有许多改变和进步。
一是我学习较以前更 {% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %} 刻苦了，{% psw 虽然说语文依旧很烂。 %}二是我的Code水平得到了有效提高，大部分原因还是我啃了好几本砖头书，如：《操作系统概念精要》、《编译原理》、《Tensorflow AI 》等 blabla的书📚
最重要的是 (至少我是那么认为的)，本博客其实2021瘫了半年，记得是最后一次部署时Hexo报错：[No layout: index.html] 当时没看到，到学校上信息课时，一上博客，一片白，把我吓蒙了。然后没时间管，就渐渐忘了，很多博文没写。
到了寒假，我就自由了，赶紧换个主题上线，就像现在这样，好看不？
{%link 博客公告, /article/744616242/, /img/favicon.png%}
最近疯狂刷博客，看看那Commits，2022才刚开始就三百多。 {% ghcard Niko-Karen, theme=algolia %}
展望 2022 🐅 对于我这种小学生，最重要莫过于我人生中的第一场、也是一生一次的大考 —— 小升初。 也许我不能说那么哲学，但还是要说：{% span blue,小升初即是童年旅程的终点站。%}
算了，不要那么抒情啦。进入正题。
{% timeline 2022 将要发生的重大事迹, orange %}
黄冈中学密考，好像是五月多。 目前已考上{% span cyan,广大附中%}……的分校，好像很……LAN
{% emp 计算机二级%} Python 语言程序设计考试! 证明自己实力的时刻！ 加油！
入初中，不知能进那所初中呢？
嘿嘿，没想到吧，这天我生日。 我只要提早3天生出来就可以上初中了。可恶(〃＞目＜)。
{% endtimeline %}</description>
    </item>
    
    <item>
      <title>说说Linux</title>
      <link>https://hugo.nikoblog.top/post/%E8%AF%B4%E8%AF%B4linux/</link>
      <pubDate>Tue, 18 Jan 2022 11:17:51 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/%E8%AF%B4%E8%AF%B4linux/</guid>
      <description>{% note red &amp;lsquo;fas fa-exclamation-triangle&amp;rsquo; %} 本文会有很多主观意识的{% del 暴力语言 %}，如有不适，请吐槽，本人尽快更改。 {% endnote %}
我用Linux也有很长时间了，有近三年了。在我9岁的时候，我第一次接触电脑就是用Ubuntu 18.04 LTS，当时图形界面已经很好看了，以至于现在我家的那台古董电脑还运行着Lubuntu 18.04 LTS (Ubuntu的分支版，LXDE桌面)。
个人Linux使用史 { 主观 } 2018 那时我正在上网查资料，觉得Win7很丑、跟不上时代了，就想换个系统。当时在我们普通人眼中，只有一种系统:Windows，所以当时一搜 &amp;ldquo;重装系统&amp;rdquo; 就满屏是Windows的重装教程(我还不会自己重装)。
我特无奈:&amp;ldquo;我的电脑装Win7已经有些撑不住了，还能来个Win8.1 ?Win10 ?&amp;ldquo;所以我再搜:&amp;ldquo;除Windows外的开源系统&amp;rdquo;，就出来个Linux,Unix。 &amp;ldquo;甚么是Linux? 甚么是Unix&amp;rdquo; 带着疑问，就尝试学习装了个最简单的Ubuntu。{% psw 差点就装上了Arch，装成了我估计要成仙。😅%}
2019 自从我发现Linux这个大宝藏，就沉迷于此不可自拔，不停换系统:Ubuntu,Debian,Fedora,Centos&amp;hellip;&amp;hellip;甚至Arch都装上了。但有个大毛病，就是我装上后总嫌不好看，不停美化，把系统速度拉低又拉低，但好处既是我的命令行越来越熟，越来越快。
2020 到了这个阶段，我可以自建Git服务器、博客服务器，运用git等工具&amp;hellip;&amp;hellip;巴拉巴拉很多技能都学习到了。其中激励我的大概都是我对计算机的热爱和痴迷，有了这些我才能步步高升，登上计算机的殿堂。
Linux 发展史 { 客观 } 我对以前的Linux版本不熟，我主要了解的是内核版本4.5+至5.0+，平时使用的，也就这几个，曾经也自己编译内核自制小系统，叫{% label SimLinux orange %}，意思就是简单的Linux，功能也简单。就只有个Bash。
{% note purple &amp;lsquo;fab fa-linux&amp;rsquo; simple %} 本人要不下次写个{%label 自己编译、制作Linux发行版教程 blue%}? 大家众议。 {% endnote %}
跑题了，回到正题。
2018 2018年的Linux已经非常不错了，当时的图形界面(除了图标)和现在竟没啥大变化。 {% psw 如果你美化了当我没说。 %}</description>
    </item>
    
    <item>
      <title>Python-Requests</title>
      <link>https://hugo.nikoblog.top/post/python-requests/</link>
      <pubDate>Mon, 17 Jan 2022 20:00:03 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/python-requests/</guid>
      <description>{% note red &amp;ldquo;fas fa-language&amp;rdquo; %} 本教程使用Python语言，需提前安装Pip3 or Pip，例如Linux类的，请在命令行内输入: {% codeblock lang:shell %} sudo apt install python3-pip {% endcodeblock %} {% endnote %}
安装 {% tabs 安装,-1 %}
一条命令(临时换源): {% codeblock lang:shell %} sudo pip install requests -i https://mirrors.aliyun.com/pypi/simple/ {% endcodeblock %}
Pypi包源官网: Requests 在这可以看到有关这个第三方库的一切。
另一个就是PIP命令行安装，很简单，一条命令。
{% note purple &amp;ldquo;fas fa-info&amp;rdquo; %} 由于包源在国外，所以访问速度感人，可以先Pip换源，再试。(后面说) {% endnote %}
{% codeblock lang:shell %} pip install requests {% endcodeblock %}
加速(阿里云): {% codeblock lang:shell %}pip config set global.</description>
    </item>
    
    <item>
      <title>Windows11 美化&#43;优化教程</title>
      <link>https://hugo.nikoblog.top/post/windows11-%E7%BE%8E%E5%8C%96-%E4%BC%98%E5%8C%96%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 17 Jan 2022 10:14:30 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/windows11-%E7%BE%8E%E5%8C%96-%E4%BC%98%E5%8C%96%E6%95%99%E7%A8%8B/</guid>
      <description>跟微软的姻缘 事情回到两年前，那时我刚放暑假，如疯狗般把作业写完后，百无聊赖，就打开电脑玩。 上网看了看新闻后，感觉有点无趣: 上哪个网站都要登录，没账号、没邮箱寸步难行啊！
就去注册个邮箱吧！心里想着。到处找地址，搜百度。但几乎没有哪个邮箱注册是不需要手机号的，而我就缺这玩意！ 咋办？接着找呗。最后，我找了Outlook，不用手机号！真香！
就这样，跟微软扯上关系了呗(谁叫Gmail需要翻墙的&amp;hellip;&amp;hellip;那时我还不知道VPN是什么 😑)
回到正题 不扯那么远。回到咱们主题: {% label Windows11美化+优化教程 purple%}
注意，是Windows 11。禁止Windows 10仿Win11入内！
 先给大家展示下我桌面哈 透明化任务栏 目前Windows虽然支持透明化，但还不够，还是太模糊了。我们要完美，完美！{来自处女座的咆哮}
{% tabs 透明化方法,2 %}
死磕在Windows设置里  打开设置 -&amp;gt; 辅助功能 -&amp;gt; 视觉效果 勾选透明效果，(好像装系统就自动勾了&amp;hellip;) Effect: 任务栏只有50%透明，不推荐  使用软件：TranslucentTB 优点：比另一个重点，但样式多。 缺点：好处说了，太重了。 {% tabs 使用方法 %}
在应用商店里下载 打开应用商店，搜索TranslucentTB,安装、下载，免费送货上门 上官网下载 提供网址:
 Github网址 腾讯软件管家  {% endtabs %}
使用软件：Startisback 官网：{%btn &amp;lsquo;https://startisback.com/&#39;,Startisback,outline%}
 下载 Free Trial版，即免费版，足够了。 下载解压后，以管理员身份运行，安装。 打开控制面板 将右上角的【查看方式】修改为【大图标】，在下面点击【开始菜单】 点击左侧的【外观】，在右侧勾选【使用自定义任务栏颜色】，然后在右侧将颜色的滑动块移动到最左边，点击应用 — 确定 打开任务管理器 重启任务管理器  All Done!</description>
    </item>
    
    <item>
      <title>New Product -- 网易云下载播放器</title>
      <link>https://hugo.nikoblog.top/post/new-product-%E7%BD%91%E6%98%93%E4%BA%91%E4%B8%8B%E8%BD%BD%E6%92%AD%E6%94%BE%E5%99%A8/</link>
      <pubDate>Mon, 10 Jan 2022 14:54:31 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/new-product-%E7%BD%91%E6%98%93%E4%BA%91%E4%B8%8B%E8%BD%BD%E6%92%AD%E6%94%BE%E5%99%A8/</guid>
      <description>&lt;p&gt;昨天翻了下写过的博文，其中有一篇是写&lt;a class=&#34;link&#34; href=&#34;http://localhost:4000/posts/2118472832/&#34;  title=&#34;文章&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;网易云直链&lt;/a&gt;的，看着看着，一个邪恶的想法油然而生&amp;hellip;&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>网易云音乐直链</title>
      <link>https://hugo.nikoblog.top/post/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E9%93%BE/</link>
      <pubDate>Thu, 06 Jan 2022 19:05:06 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E9%93%BE/</guid>
      <description>&lt;p&gt;网易云音乐有很多方法可以获取直链，但这些方法要么很快失效，要么有缓存时间。&lt;/p&gt;
&lt;p&gt;以下提供的方法简单、快捷并且直到现在依然可用。已经稳定几年了，网易云音乐外链用官方的就好。&lt;/p&gt;
&lt;p&gt;（凡是网易云音乐可以正常试听的均可以直链，因为版权原因或其他原因无法试听的也无法外链。）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python Jieba库</title>
      <link>https://hugo.nikoblog.top/post/python-jieba%E5%BA%93/</link>
      <pubDate>Thu, 06 Jan 2022 13:11:13 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/python-jieba%E5%BA%93/</guid>
      <description>&lt;h2 id=&#34;1-jieba-的江湖地位&#34;&gt;&lt;strong&gt;1. jieba 的江湖地位&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;NLP（自然语言）领域现在可谓是群雄纷争，各种开源组件层出不穷，其中一支不可忽视的力量便是 jieba 分词，号称要做最好的 Python 中文分词组件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>散学以后</title>
      <link>https://hugo.nikoblog.top/post/%E6%95%A3%E5%AD%A6%E4%BB%A5%E5%90%8E/</link>
      <pubDate>Thu, 06 Jan 2022 12:23:55 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/%E6%95%A3%E5%AD%A6%E4%BB%A5%E5%90%8E/</guid>
      <description>花费一学期的时间，学习的知识，在两天内用尽心血在一张试卷上呈现，说起来有点夸张，但确是这样。
在2022年1月6日，我们数学考试结束后，全班都仿佛一锅烧开的热水，沸腾了。
听到那一声悦耳放学铃，我冲出教室，“畏罪潜逃”。冲进了学校附近的Mixue Ice Cream。
喝着新鲜的柠檬水，看着书，好不痛快。 过了一会，几乎全班人都到了。 全是人。好挤。😑 有什么办法？忍吧。忍忍就过去了。</description>
    </item>
    
    <item>
      <title>博客公告</title>
      <link>https://hugo.nikoblog.top/post/%E5%8D%9A%E5%AE%A2%E5%85%AC%E5%91%8A/</link>
      <pubDate>Sun, 02 Jan 2022 19:43:28 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/%E5%8D%9A%E5%AE%A2%E5%85%AC%E5%91%8A/</guid>
      <description>Updated Blog at 2022/01/24 14:56 终于发现了以前博客为什么加载那么慢了，原来是圆角！ 文章的透明效果也是因为以前没认真看教程，以为会遮挡背景(本博客是根据Akilar的“每页都使用不同的自定义的背景”方案)。现在好了。
本次更新主要优化了性能、美化了界面，也更新了我的大脑。“我以后再也不美化啦！” 图片？想多了。现在你们看到的不就是吗？反正我以后不会改了……
Updated Blog at 2022/1/14 21:41 本次更新更换了网站主题，由Next转为Butterfly {% btn &amp;lsquo;https://gitee.com/immyw/hexo-theme-butterfly&#39;,Butterfly主题Gitee地址,far fa-hand-point-right,blue larger,outline %}
更新日志  优化博客访问速度，减少插件使用，尽量轻度搭建。 添加Live2d-Widget升级互动版看板娘(不是插件!)，美化一下嘛~  添加吸底Aplayer音乐播放器，歌单为网易云歌单 &amp;lsquo;清华自习室 / 学习处方&amp;rsquo; ，持续跟进。   添加双评论系统,Gitalk和Twikoo  添加在线聊天系统{%label TiDio blue%}，恶搞翻译。  各个页面展示 欢迎来到我的博客 {% btn &amp;lsquo;https://niko-karen.gtihub.io&amp;rsquo;,我的博客,far fa-hand-point-right,orange larger,outline %}</description>
    </item>
    
    <item>
      <title>一日奇遇</title>
      <link>https://hugo.nikoblog.top/post/%E4%B8%80%E6%97%A5%E5%A5%87%E9%81%87/</link>
      <pubDate>Sun, 14 Nov 2021 16:20:22 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/%E4%B8%80%E6%97%A5%E5%A5%87%E9%81%87/</guid>
      <description>{% note red &amp;lsquo;fas fa-exclamation-circle&amp;rsquo; %} 这篇文章是初建博客时写的，文笔稚嫩，还没写完，吾会尽力完成。 另外，文中的图书馆现在已经成为旧图书馆。 {% endnote %}
前文P.S : 这篇文章巨多灾难，第一次被覆盖，第二次被删除。难受 :(
在星期六的一个万里乌云、阳光明媚、晴空万里的日子里，本该安安稳稳地在家辛苦码字，但学习的欲望提醒了我。经过一番认真的整理后，我踏上了{%del 战场%}。
到达图书馆，但又未完全到达。因为疫情还很严重，我还需经过层层关卡、过五关斩六将，才能真正{%del 救出公主%}进入内，更何况现在是假日，有很多人和我们一样，也在排队扫码。 十分钟后，我扫完码入内后，首先冲的是少儿馆，{% psw 其实我是去看成人馆， %}先进去还书。走进去之前，还要登记信息，那我就上吧…… &amp;ldquo;我要{% psw 强奸 %}你!&amp;ldquo;一个女声，对另一个女生说。这可把我吓得……咋俩女的还说这话，心脏病都要出来了。</description>
    </item>
    
    <item>
      <title>思</title>
      <link>https://hugo.nikoblog.top/post/%E6%80%9D/</link>
      <pubDate>Fri, 12 Nov 2021 18:09:42 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/%E6%80%9D/</guid>
      <description>&lt;h2 id=&#34;1前言&#34;&gt;1.前言&lt;/h2&gt;
&lt;p&gt;​	今天我放学回家时看到了许多令我个人感受良深的事物&lt;/p&gt;
&lt;p&gt;​	可能因为我是个男生，许多人认为我不在意这些花花草草，实际上我表面上是这样，但&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;​	我很关心那些可怜的事物。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我的旅行日记</title>
      <link>https://hugo.nikoblog.top/post/%E6%88%91%E7%9A%84%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0/</link>
      <pubDate>Sat, 02 Oct 2021 20:50:43 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/%E6%88%91%E7%9A%84%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0/</guid>
      <description>&lt;h1 id=&#34;增城一行&#34;&gt;&lt;strong&gt;增城一行&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;就在昨天,我们到了我的外婆家&amp;mdash;&amp;ndash;增城.&lt;/p&gt;
&lt;p&gt;那是一个美丽的地方,但总有些美中不足.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python Selenium自动化详解</title>
      <link>https://hugo.nikoblog.top/post/python-selenium%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.nikoblog.top/post/python-selenium%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%A6%E8%A7%A3/</guid>
      <description>Selenium，Python的浏览器自动化大佬库，称霸Python浏览器自动化领域。 作为萌新的我，当然要先学习这个既简单又困难的库。
注意，阅读本文需要有亿点点前端知识才容易理解。要是大佬看到了不会冒犯到吧，不会吧……
安装 Selenium 包 Pip 安装 sudo pip install selenium 源码包安装 sudo python setup.py install 安装 对应浏览器的 WebDriver Edge: https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/
Chrome (淘宝源) : https://npm.taobao.org/mirrors/chromedriver/
Firefox: https://github.com/mozilla/geckodriver/releases/
IE: http://selenium-release.storage.googleapis.com/index.html?
Edge：对应浏览器对应版本，对应下载。
Chrome: 注意，先在设置 &amp;ndash;&amp;gt; 关于Chrome 里查看Chrome版本号,再去我给的淘宝源里找。再注意，在淘宝源里找版本时，如果没有本浏览器的版本的话，就找自己版本号的上一个。
Firefox: 选择自己系统版本下载对应的。{%del 我不用火狐，报错别怪我 (弱小.jpeg)
IE: 这我没啥注释，但建议IE11用用2.5版本就好。(这年头还有人用IE?可怕可怕。)
下载解压后把文件放在Python目录下的Scripts目录中，别问为啥，问就是懒得加环境变量。Linux的可以放在/usr/bin下。
开始！ 废话忒多了，进入正题。
基础 咱为啥要用Selenium，就是可以爬到普通爬虫爬不到的东东，用Selenium，更方便、更快捷、更显逼格！(打广告)
from selenium import webdriver driver = webdriver.Chrome() #按照你的浏览器来，就上面那几种 driver.get(&amp;#34;https://bing.com&amp;#34;) #对应浏览器打开Bing标签页 大概会看到这样: ![](&amp;lsquo;Python Selenium自动化详解\dri.webp&amp;rsquo;)
如何往输入框内填入文字并点击搜索按钮进行搜索？ Very Easy.
不要动你那个界面，打开DevTools，找到搜索框的元素，{% kbd 右键%} - {% kbd Copy %} - {% kbd CopyXpath %}，再回到代码这。</description>
    </item>
    
  </channel>
</rss>
